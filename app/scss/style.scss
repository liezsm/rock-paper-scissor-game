@use "utilities" as u;

html {
  font-size: 100%;
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  margin: 0;
  padding: 0;
  line-height: 1.3;
  width: 100%;
  min-height: 100vh;
  font-family: u.$font-family;
  background: radial-gradient(at top, u.$radialGradient1, u.$radialGradient2);
}
.wrapper {
  width: 100%;
  height: 100%;
  position: relative;
}

header {
  border: 2px solid u.$headerOutline;
  border-radius: 0.7rem;
  @include u.d-flex(row, space-between, center);
  width: 85%;
  max-width: u.pxToRem(700px);
  min-height: u.pxToRem(97px);
  margin: 0 auto;
  margin-top: u.pxToRem(34px);

  .logo {
    width: u.pxToRem(80px);
    // height: 100%;
    margin: 1.2rem;
    min-height: 50px;

    @include u.desktop {
      width: u.pxToRem(170px);
    }
  }

  .score-container {
    background-color: #fff;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: u.pxToRem(80px);
    border-radius: 0.6rem;
    padding: 1rem;
    margin: 1rem;
    min-height: u.pxToRem(73px);

    @include u.desktop {
      width: u.pxToRem(150px);
    }

    .score-text {
      color: u.$scoreText;
      font-size: u.pxToRem(10px);
      letter-spacing: 1px;
      text-transform: uppercase;
      @include u.desktop {
        font-size: u.pxToRem(14px);
      }
    }

    .score-number {
      font-size: u.pxToRem(30px);
      color: u.$darkText;
      font-weight: bold;

      @include u.desktop {
        font-size: u.pxToRem(47px);
      }
    }
  }
}

// -game component

.game-container {
  width: 100%;
  padding: 1rem;
  max-width: u.pxToRem(500px);
  min-height: u.pxToRem(280px);

  margin: u.pxToRem(97px) auto;
  display: grid;
  grid-template-areas:
    "paper scissor"
    "rock rock";
  gap: 1rem;
  position: relative;

  @include u.desktop {
    gap: 5rem;
    margin: 2rem auto;
  }

  &::before {
    content: " ";
    position: absolute;
    width: 50%;
    height: 70%;
    top: 55%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: url(./images/bg-triangle.svg) no-repeat;
    background-size: contain;
    // border: 2px solid yellow;
    z-index: -1;

    @include u.desktop {
      width: 100%;
      height: 70%;
      top: 55%;
      left: 75%;
    }
  }
}

.choice-btn {
  width: u.pxToRem(100px);
  margin: 0 auto;
  border: none;
  outline: none;
  background: none;
  cursor: pointer;
}

.choice-btn[data-armor="paper"] {
  grid-area: paper;
}
.choice-btn[data-armor="scissors"] {
  grid-area: scissor;
}
.choice-btn[data-armor="rock"] {
  grid-area: rock;
}

.choice-img {
  position: relative;
  width: u.pxToRem(100px);
  height: u.pxToRem(100px);

  @include u.desktop {
    width: u.pxToRem(140px);
    height: u.pxToRem(140px);

    img {
      width: u.pxToRem(70px);
      height: u.pxToRem(70px);
    }
  }

  background: #fff;
  border-radius: 50%;
  display: grid;
  place-items: center;
  box-shadow: inset 0 0.36rem rgba(0, 0, 0, 0.3);

  // todo added :;after for hover effect
  &::before,
  &::after {
    content: " ";
    position: absolute;
    left: -15%;
    top: -15%;
    width: 130%;
    height: 130%;
    border-radius: 50%;
    // background: linear-gradient(
    //   to bottom,
    //   u.$paperGradient,
    //   u.$paperGradient2
    // );
    z-index: -1;
    box-shadow: inset 0 -0.36rem rgba(0, 0, 0, 0.4);
  }

  &[data-paper]::before {
    background: linear-gradient(to bottom, u.$paperGradient, u.$paperGradient2);
  }

  &[data-scissors]::before {
    background: linear-gradient(
      to bottom,
      u.$scissorsGradient,
      u.$scissorsGradient2
    );
  }

  &[data-rock]::before {
    background: linear-gradient(to bottom, u.$rockGradient, u.$rockGradient2);
  }

  &::after {
    opacity: 0;
    transition: opacity 400ms ease;
  }
}

.choice-btn:focus .choice-img::after {
  opacity: 1;
  box-shadow: 0 0 0 2rem #223351;
  z-index: -2;
}
// -rules button

.rules-container {
  width: 100%;
  padding: 2rem;
  display: flex;
  justify-content: center;

  .rules-btn {
    width: u.pxToRem(130px);
    height: u.pxToRem(40px);

    color: #fff;
    text-transform: uppercase;
    font-size: u.pxToRem(14px);
    font-family: inherit;

    letter-spacing: 1px;
    background: none;
    outline: none;
    border: 1px solid #fff;
    border-radius: 0.4rem;

    &:focus {
      border: 5px solid #fff;
    }

    &:hover {
      cursor: pointer;
    }

    @include u.desktop {
      position: absolute;
      bottom: 0;
      right: 0;
      margin-right: 2rem;
      margin-bottom: 2rem;
    }
  }
}

// -modals

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
  background-color: rgba(255, 255, 255, 0.7);

  .modal-wrap {
    background: #fff;
    @include u.d-flex(column, space-between, center);
    width: 100%;
    height: 100%;
    padding: u.pxToRem(60px) 0;

    @include u.desktop {
      position: relative;
      padding: 2rem;
      align-items: flex-start;

      img {
        margin: 0 auto;
      }
    }
    .rules-text {
      font-size: u.pxToRem(24px);
      text-transform: uppercase;
      margin-top: 1rem;
      color: u.$darkText;

      @include u.desktop {
        margin-top: 0;
      }
    }

    .close-btn {
      background: none;
      border: none;
      outline: none;

      &:hover {
        cursor: pointer;
      }

      @include u.desktop {
        position: absolute;
        top: 2.5rem;
        right: 2rem;
      }
    }

    @include u.desktop {
      width: u.pxToRem(405px);
      height: u.pxToRem(420px);
      border-radius: 0.5rem;
    }
  }

  display: none;
}

// -todo show modal( using js)

.show-modal {
  display: block;

  @include u.desktop {
    background-color: rgba(0, 0, 0, 0.3);
    @include u.d-flex(row, center, center);
  }
}

// -RESULTS

.result {
  display: grid;
  grid-template-columns: repeat(2, 1fr);

  // place-items: center;
  grid-template-areas:
    "user-armor computer-armor"
    "user           computer   ";
  width: 100%;
  max-width: 1000px;
  margin: 0 auto;
  gap: 2.5rem;

  padding: 4rem 2rem;
  color: #fff;
  text-align: center;
  display: none;
  > * {
    padding: 1rem;
  }
  h1 {
    font-size: u.pxToRem(41px);
    text-transform: uppercase;
    font-weight: 700;

    @include u.desktop {
      font-size: u.pxToRem(50px);
    }
  }
  h2 {
    font-size: u.pxToRem(13px);

    @include u.desktop {
      font-size: u.pxToRem(18px);
    }
  }
}

.user-picked {
  grid-area: user-armor;
  min-height: 160px;
  height: auto;
}

h2[data-user-pick] {
  grid-area: user;
}

.comp-picked {
  grid-area: computer-armor;
  min-height: 160px;
  height: auto;
}

h2[data-comp-pick] {
  grid-area: computer;
}

[data-play-again-btn] {
  text-transform: uppercase;
  background-color: #fff;
  width: u.pxToRem(222px);
  font-family: inherit;
  font-size: 1rem;
  padding: 1rem 0;
  border-radius: 0.5rem;
  border: none;
  outline: none;
  margin-top: 2rem;

  &:hover {
    cursor: pointer;
    color: u.$rockGradient2;
  }

  @include u.desktop {
    font-size: u.pxToRem(20px);
  }
}
// todo cirlce background upon picking a choice
.result-item {
  width: 10rem;
  height: 10rem;
  background: #16213d;
  border-radius: 50%;
  z-index: -1;
}

// todo show result container

.show-result {
  display: grid;
  grid-template-areas:
    "user-armor computer-armor"
    "user           computer "
    "result       result";

  @include u.desktop {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas:
      "user  result   computer"
      "user-armor        result   computer-armor";
    place-items: center;
  }
}

// todo show the final result fo the game and play again button

.hidden {
  display: none;
}

.show-winner {
  grid-area: result;
}

// todo add the winner glow effect

.winner .choice-img::after {
  opacity: 1;
  box-shadow: 0 0 0 20px #293251, 0 0 0 70px #232c4b, 0 0 0 100px #1e2949;
  z-index: -99;

  @include u.desktop {
    box-shadow: 0 0 0 50px #293251, 0 0 0 100px #232c4b, 0 0 0 170px #1e2949;
  }
}
